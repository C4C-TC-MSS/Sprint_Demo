@page "/certificate"

@using TC_Sprint.Data.Certification

@if (selectedCertificate)
{
    <h1 class="page-title">Requirements for @CertificateName</h1>

    <p>Listed below are the complete requirements you need to obtain your chosen certificate: <b>@CertificateName</b></p>

    <section class="sub-section cdn">
        <section class="icon">
            <img src="human.png" />
        </section>
        <section class="content">
            <h3>Candidate Document Number (CDN)</h3>
            <p>
                All seafarer certifications require a CDN.
                <a href="#">How to obtain CDN</a>
            </p>
        </section>
    </section>

    <section class="sub-section education_and_training">
        <section class="icon">
            <img src="exam.png" />
        </section>
        <section class="content">
            <h3>Education and Training</h3>
            <ul>
                @foreach (var education in SelectedCertification.EducationList)
                {
                <li>@education.Name <a href="@education.ExternalLink">How to obtain</a></li>
                }
            </ul>
        </section>
    </section>

    <section class="sub-section exams">
        <section class="icon">
            <img src="document.png" />
        </section>
        <section class="content">
            <h3>Exams</h3>
            <ul>
                @foreach (var exam in SelectedCertification.Exams)
                {
                <li>@exam.Name <a href="@exam.ExternalLink">Where to take</a></li>
                }
            </ul>
        </section>
    </section>

    <section class="sub-section medical">
        <section class="icon">
            <img src="medical.png" />
        </section>
        <section class="content">
            <h3>Medical</h3>
            <p>
                All seafarers are required to have a medical certificate.
                <a href="#">Find eligable medical examiners.</a>
            </p>
        </section>
    </section>

    <section class="sub-section qualifying_service">
        <section class="icon">
            <img src="boat.png" />
        </section>
        <section class="content">
            <h3>Qualifying Service</h3>
            <p>
                The qualifying service represents the amount of experience
                needed for the chosen certificate. For <b>@CertificateName</b>,
                you require:
            </p>
            <ul>
                <li>5 years of service.</li>
                <li><a href="#">"Statement of qualifying service"</a></li>
            </ul>
        </section>
    </section>

    <nav class="page-actions">
        <button class="button button-back" @onclick="() => UnselectCertificate()">Back</button>
        <button class="button button-print" onclick="alert('There\'s a special place for people who kill trees you know');">
            Printable version
        </button>
        <button class="button button-email" onclick="alert('A sensible choice! Our forest friends thank you for your continued service');">
            Email this list
        </button>
        <a class="button button-next-steps" href="nextstep">
            Next Steps
        </a>
    </nav>
}
else
{

    <h1>Select a certificate</h1>

    <p>
        Please pick an eligible certificate based on the information you have provided.
    </p>

    <select bind="@SearchTerm" @onchange="DoThis">
        @foreach (var certificate in certificates)
        {
            <option value=@certificate>@certificate</option>
        }
    </select>

    <nav>
        <a class="button button-back" href="quiz">Back</a>
        <button class="button" @onclick="SelectCertification">Next</button>
    </nav>
}

@code {
    private string CertificateName = null;
    private Certification SelectedCertification;
    private bool selectedCertificate = false;
    private string searchTerm;
    public string SearchTerm
    {
        get { return searchTerm; }
        set { searchTerm = value; }
    }

    List<string> certificates = new List<string>()
{
        "Select a certificate",
        "First-Class Engineer Motor Ship",
        "First-Class Engineer Steamship",
        "First Mate Long Run Ferry"
    };

    private Certification CreateCertificate()
    {
        Certification certification = new Certification();
        Education education1 = new Education()
        {
            Name = "Diploma in Marine Eng.Technology",
            ExternalLink = "https://www.bcit.ca/study/programs/2935dipma",
        };

        List<Exam> Exams = new List<Exam>();
        string[] exams = new string[] {
            "Ship management practices (examination code: PPSSIM2)",
            "Applied Mechanics (examination code: 1APM)",
            "Thermodynamics (examination code: 1H-H)",
            "Electrotechnology (examination code: 1ELC)",
            "Naval Architecture (examination code: 1NAR)",
            "General engineering knowledge (examination code: 1EKG)",
            "Engineering knowledge of motor vessels (examination code: 1EKM)",
            "Engineering knowledge of steamships (examination code: 1EKS)",
            "Oral examination (examination code: 1ORM or 1ORS)",
        };
        for (int i = 0; i < exams.Length; i++)
        {
            Exams.Add(new Exam()
            {
                Name = exams[i],
                ExternalLink = "#",
            });
        }

        certification.EducationList.Add(education1);
        certification.Exams = Exams;
        certification.Name = CertificateName;

        return certification;
    }

    private void UnselectCertificate()
    {
        selectedCertificate = false;
        CertificateName = null;
    }

    private void SelectCertification()
    {
        if (CertificateName != null)
        {
            selectedCertificate = true;
        }
    }

    private void DoThis(ChangeEventArgs e)
    {
        CertificateName = e.Value.ToString();
        SelectedCertification = CreateCertificate();
    }
}
